version: '3'
services:

  block-oracle:
    build:
      context: ../..
      dockerfile: k8s/Dockerfile
    command: [ "/usr/local/bin/block-oracle", "run",  "/app/config.toml" ]
    environment:
      RUST_BACKTRACE: '1'
      SUBGRAPH_URL: 'http://graph-node:8000/subgraphs/name/edgeandnode/block-oracle'
      DATA_EDGE_CONTRACT_ADDRESS: 'e78a0f7e598cc8b0bb87894b0f60dd2a88d6a8ab'
      EPOCH_MANAGER_CONTRACT_ADDRESS: 'd833215cbcc3f914bd1c9ece3ee7bf8b14f841bb'
      PROTOCOL_CHAIN_JRPC_URL: "http://hardhat:8545"
    ports:
      - 9090
    volumes:
      - ./config.toml:/app/config.toml
    depends_on:
      graph-node:
        condition: service_healthy
      epoch-subgraph:
        condition: service_completed_successfully

  graph-node:
    image: graphprotocol/graph-node
    environment:
      ipfs: 'ipfs:5001'
      postgres_host: postgres
      postgres_port: '5432'
      postgres_user: graph-node
      postgres_db: graph-node
      postgres_pass: let-me-in
      ethereum: 'hardhat:http://hardhat:8545'
      GRAPH_LOG: debug
    ports:
      - 8020
      - 8000
    healthcheck:
      test: nc -z localhost 8020 || exit 1
    depends_on:
      hardhat:
        condition: service_healthy
      postgres:
        condition: service_healthy
      ipfs:
        condition: service_healthy

  ipfs:
    image: ipfs/go-ipfs:latest
    healthcheck:
      test: nc -z localhost 5001 || exit 1

  postgres:
    image: postgres
    user: postgres
    command: postgres -cshared_preload_libraries=pg_stat_statements
    environment:
      POSTGRES_USER: graph-node
      POSTGRES_PASSWORD: let-me-in
      POSTGRES_DB: graph-node
    healthcheck:
      test: psql -U graph-node -c '\q' || exit 1

  hardhat:
    build:
      context: ../../packages/contracts
      dockerfile: ../../k8s/compose/hardhat/Dockerfile
    healthcheck:
      test: nc -z localhost 8545 || exit 1

  epoch-subgraph:
    build:
      context: ../../packages/subgraph
      dockerfile: ../../k8s/compose/epoch-subgraph/Dockerfile
    restart: on-failure
    command: >
      sh -c "yarn graph create --node http://graph-node:8020/ edgeandnode/block-oracle &&
             yarn graph deploy --node http://graph-node:8020/ --ipfs http://ipfs:5001 edgeandnode/block-oracle --version-label 0.1.0"
    depends_on:
      graph-node:
        condition: service_healthy

  contracts:
    build:
      context: ../../packages/contracts
      dockerfile: ../../k8s/compose/contracts/Dockerfile
    command: sh /app/run.sh
    volumes:
      - ./contracts/set-automining-interval.js:/set-automining-interval.js
      - ./contracts/extended.config.ts:/app/extended.config.ts
      - ./contracts/extended.config.ts:/app/network-contracts/extended.config.ts
      - ./contracts/run.sh:/app/run.sh
    depends_on:
      hardhat:
        condition: service_healthy

  prometheus:
    image: bitnami/prometheus
    volumes:
      - ./prometheus/config.yaml:/opt/bitnami/prometheus/conf/prometheus.yml
    ports:
      - "9092:9090"
